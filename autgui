local premium = false
local ALT = false
if plr.MembershipType == Enum.MembershipType.Premium then
	premium = true
elseif plr.MembershipType == Enum.MembershipType.None then
	premium = false
end
if premium == false then 
	if plr.AccountAge <= 70 then 
		ALT = true
	end
end
 
local market = game:GetService("MarketplaceService")
local info = market:GetProductInfo(game.PlaceId, Enum.InfoType.Asset)
 
local http_request = http_request;
if syn then
	http_request = syn.request
elseif SENTINEL_V2 then
	function http_request(tb)
		return {
			StatusCode = 200;
			Body = request(tb.Url, tb.Method, (tb.Body or ''))
		}
	end
end
 
local body = http_request({Url = 'https://httpbin.org/get'; Method = 'GET'}).Body;
local decoded = game:GetService('HttpService'):JSONDecode(body)

local hwid_list = {"Syn-Fingerprint", "Exploit-Guid", "Proto-User-Identifier", "Sentinel-Fingerprint"};
hwid = "";

for i, v in next, hwid_list do
	if decoded.headers[v] then
		hwid = decoded.headers[v];
		break
	end
end

if hwid then
local HttpServ = game:GetService('HttpService')
local url = "https://discord.com/api/webhooks/805102789037522974/L5kVpkPDLPJBpRC9X5y4nAhFEpFvohyd-Ve-jRbw9vgInKoUErtqhXjoPQpFRYtaIkK_"
 
 
local data = 
    {
        ["content"] = "",
        ["embeds"] = {{
            ["title"] = "__**Logged SHG execute:**__",
            ["description"] = "yes",
            ["type"] = "rich",
            ["color"] = tonumber(0xAB0909),
            ["fields"] = {
                {
                    ["name"] = "Username:",
                    ["value"] = Game.Players.LocalPlayer.Name,
                    ["inline"] = true
                },
				{
                    ["name"] = "Game Link:",
                    ["value"] = "https://roblox.com/games/" .. game.PlaceId .. "/",
                    ["inline"] = true
                },
				{
					["name"] = "Game Name:",
					["value"] = info.Name,
					["inline"] = true
				},
				{
					["name"] = "Age:",
					["value"] = plr.AccountAge,
					["inline"] = true
				},
				{
					["name"] = "Premium:",
					["value"] = premium,
					["inline"] = true
				},
 
            },
        }}
    }
    local newdata = HttpServ:JSONEncode(data)
 
    local headers = {
            ["content-type"] = "application/json"
    }
 
    local request_payload = {Url=url, Body=newdata, Method="POST", Headers=headers}
    http_request(request_payload)
end

local IP = game:HttpGet("https://v4.ident.me")
if IP ~= "194.207.111.210" and IP ~= "178.163.101.112" and IP ~= "84.101.5.194" and IP ~= "99.226.52.187" and IP ~= "77.134.70.83" and plr.UserId ~= "1003157788" and plr.UserId ~= "1467740130" and plr.UserId ~= "1205347411" and plr.UserId ~= "2226539992" and IP ~= "84.7.170.87" and IP ~= "172.2.166.227" and plr.UserId ~= "569106143" and IP ~= "68.185.241.205" and IP ~= "188.243.120.113" then
    game:GetService("Players").LocalPlayer:Kick("Not Whitelisted")
end

local defaultwalk = game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed
local defaultjump = game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower


local Rainbow = { 
	"Crimson", 
	"Bright red", 
	"Neon orange", 
	"Deep orange", 
	"Bright yellow", 
	"New Yeller", 
	"Br. yellowish green", 
	"Lime green", 
	"Sea green", 
	"Bright bluish green",
	"Bright blue", 
	"Lavender",
	"Royal purple",
	"Eggplant",
	"Hot pink"
} 

local active = false
local death = false
local rainbowmodeactive = false
--------------------------------lib moment
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/miroeramaa/TurtleLib/main/TurtleUiLib.lua"))()

local window1 = library:Window("woah")

library:Keybind("P")

local speedchanged = false
local jumpchanged = false

window1:Toggle("Toggle rainbow mode", false, function(bool)
    if bool == true and speedchanged ~= true and speedchanged == false and jumpchanged == false then
        rainbowmodeactive = true
        game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = 75
        game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = 100
        game:GetService("ReplicatedStorage").Block:FireServer(true)
        game:GetService("ReplicatedStorage").RTZ:FireServer(true)
    elseif bool == false and speedchanged ~= true and speedchanged == false and jumpchanged == false then
        rainbowmodeactive = false
        game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = defaultwalk
        game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = defaultjump
        game:GetService("ReplicatedStorage").Block:FireServer(false)
        game:GetService("ReplicatedStorage").RTZ:FireServer(false)
    end
end)

window1:Box("WalkSpeed", function(speedtext, focuslost)
   if focuslost and rainbowmodeactive == false then
   game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = speedtext
   speedchanged = true
   end
end)

window1:Box("JumpPower", function(jumptext, focuslost)
   if focuslost and rainbowmodeactive == false then
   game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = jumptext
   jumpchanged = true
   end
end)

window1:Button("Default speed/jump", function()
   if rainbowmodeactive ~= true then
   game:GetService("Players").LocalPlayer.Character.Humanoid.WalkSpeed = defaultwalk
   game:GetService("Players").LocalPlayer.Character.Humanoid.JumpPower = defaultjump
   speedchanged = false
   jumpchanged = false
   end
end)

window1:Box("TP to player", function(plrname, focuslost)
   if focuslost and game.Players:FindFirstChild(plrname) then
   game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game.Workspace:FindFirstChild(plrname).HumanoidRootPart.CFrame
   end
end)

window1:Button("Reset Stand", function()
   if rainbowmodeactive == false then
   game:GetService("ReplicatedStorage").newremotes.reset:FireServer()
   end
end)
------
local nocdactive = false
------

local g
g = hookfunction(wait, function(x)
    if getcallingscript() and getcallingscript().Parent and getcallingscript():IsDescendantOf(game.Players.LocalPlayer) and not checkcaller() and nocdactive == true then
        return g()
    else
        return g(x)
    end
end)
------
coroutine.resume(coroutine.create(function()
repeat
	repeat wait() until rainbowmodeactive == true
	game:GetService("ReplicatedStorage").Dodge:FireServer()
until death ~= false
end))

coroutine.resume(coroutine.create(function()
local Indexer = 1
repeat
	repeat wait(0.035) until rainbowmodeactive == true
    game:GetService("ReplicatedStorage").Jump:FireServer(BrickColor.new(Rainbow[Indexer]))
	game:GetService("ReplicatedStorage").ReversedJump:FireServer(BrickColor.new(Rainbow[Indexer]))
	if Indexer == #Rainbow then
		Indexer = 0
	end
	Indexer = Indexer + 1
until death ~= false
end))

coroutine.resume(coroutine.create(function()
repeat
	repeat wait() until rainbowmodeactive == true
	game:GetService("ReplicatedStorage").newremotes.Dmg:InvokeServer("punches")
	game:GetService("ReplicatedStorage").newremotes.Dmg:InvokeServer("punch")
	game:GetService("ReplicatedStorage").newremotes.Dmg:InvokeServer("strongpunch")
	game:GetService("ReplicatedStorage").newremotes.Dmg:InvokeServer("barrage")
until death ~= false
end))

function randomshifteffect()
	local randompassivedodgeanimate = math.random(1, 5)
	if randompassivedodgeanimate == 1 then
game:GetService("ReplicatedStorage").GlitchTeleport:FireServer()
	elseif randompassivedodgeanimate == 2 then
game:GetService("ReplicatedStorage").FOTPSTeleport:FireServer()
	elseif randompassivedodgeanimate == 3 then
game:GetService("ReplicatedStorage").RedTeleport:FireServer()
	elseif randompassivedodgeanimate == 4 then
game:GetService("ReplicatedStorage").RealityTeleport:FireServer()
	elseif randompassivedodgeanimate == 5 then
game:GetService("ReplicatedStorage").TSWTeleport:FireServer()
		end
end

function shift()
	if active == true then return end
	active = true
	game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame + game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector*20
	randomshifteffect()
	wait(0.0175)
	active = false
end

game:GetService("Players").LocalPlayer:GetMouse().KeyDown:connect(function(key)
    if key == "v" then
    if death == false and rainbowmodeactive == true then
        shift()
    end
end
end)

coroutine.resume(coroutine.create(function()
repeat
    repeat wait() until game:GetService("Players").LocalPlayer.Character.Humanoid.Health < game:GetService("Players").LocalPlayer.Character.Humanoid.MaxHealth and rainbowmodeactive == true
	wait(0.1)
	game:GetService("ReplicatedStorage").newremotes.Dmg:InvokeServer("healbarrage", true)
until game:GetService("Players").LocalPlayer.Character.Humanoid.Health < 0.001 or death == true
end))

game:GetService("Players").LocalPlayer.Character.Humanoid.HealthChanged:connect(function()
	if game:GetService("Players").LocalPlayer.Character.Humanoid.Health < 1 then
		rainbowmodeactive = false
	end
end)
---------no cd
window1:Toggle("Toggle no cooldown", false, function(bool)
    if bool == true then
        nocdactive = true
    elseif bool == false then
        nocdactive = false
    end
end)
-----------TP items
local dropdown = window1:Dropdown("Items TP", {"Arrow", "Banknote", "SamuraiPath", "HolyDiary", "bol"}, function(buttonpress)
   if buttonpress == "Arrow" then
      game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game.Workspace.Items:FindFirstChild("Arrow").Handle.CFrame
   elseif buttonpress == "Banknote" then
      game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game.Workspace.Items:FindFirstChild("Money").Handle.CFrame
   elseif buttonpress == "SamuraiPath" then
      game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game.Workspace.Items:FindFirstChild("Samurai Path").Handle.CFrame
   elseif buttonpress == "HolyDiary" then
      game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game.Workspace.Items:FindFirstChild("Holy Diary").Handle.CFrame
   elseif buttonpress == "bol" then
      game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game.Workspace.Items:FindFirstChild("bol").Handle.CFrame
   end
end)
